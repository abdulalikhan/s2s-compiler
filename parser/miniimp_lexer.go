// Code generated from MiniImp.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type MiniImpLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var MiniImpLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func miniimplexerLexerInit() {
	staticData := &MiniImpLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'true'", "'false'", "'not'", "'is'", "'or'", "'and'", "'+'", "'-'",
		"'*'", "'/'", "'('", "')'", "'if'", "'then'", "'else'", "'while'", "'set'",
		"'='", "';'", "'write'", "'read'", "'var'", "'as str'", "'as int'",
		"'begin'", "'end.'", "'program'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "Identifier", "Number",
		"String", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "Digit", "Letter", "Escape", "EscapedQuote", "EscapedBackslash",
		"Identifier", "Number", "String", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 31, 232, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1,
		11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 3, 29, 192, 8,
		29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32,
		5, 32, 204, 8, 32, 10, 32, 12, 32, 207, 9, 32, 1, 33, 1, 33, 5, 33, 211,
		8, 33, 10, 33, 12, 33, 214, 9, 33, 1, 34, 1, 34, 1, 34, 5, 34, 219, 8,
		34, 10, 34, 12, 34, 222, 9, 34, 1, 34, 1, 34, 1, 35, 4, 35, 227, 8, 35,
		11, 35, 12, 35, 228, 1, 35, 1, 35, 1, 220, 0, 36, 1, 1, 3, 2, 5, 3, 7,
		4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27,
		14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45,
		23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 0, 57, 0, 59, 0, 61, 0, 63, 0,
		65, 28, 67, 29, 69, 30, 71, 31, 1, 0, 3, 1, 0, 65, 90, 2, 0, 34, 34, 92,
		92, 3, 0, 9, 10, 13, 13, 32, 32, 234, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0,
		0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 1, 73, 1, 0, 0, 0, 3, 78, 1, 0,
		0, 0, 5, 84, 1, 0, 0, 0, 7, 88, 1, 0, 0, 0, 9, 91, 1, 0, 0, 0, 11, 94,
		1, 0, 0, 0, 13, 98, 1, 0, 0, 0, 15, 100, 1, 0, 0, 0, 17, 102, 1, 0, 0,
		0, 19, 104, 1, 0, 0, 0, 21, 106, 1, 0, 0, 0, 23, 108, 1, 0, 0, 0, 25, 110,
		1, 0, 0, 0, 27, 113, 1, 0, 0, 0, 29, 118, 1, 0, 0, 0, 31, 123, 1, 0, 0,
		0, 33, 129, 1, 0, 0, 0, 35, 133, 1, 0, 0, 0, 37, 135, 1, 0, 0, 0, 39, 137,
		1, 0, 0, 0, 41, 143, 1, 0, 0, 0, 43, 148, 1, 0, 0, 0, 45, 152, 1, 0, 0,
		0, 47, 159, 1, 0, 0, 0, 49, 166, 1, 0, 0, 0, 51, 172, 1, 0, 0, 0, 53, 177,
		1, 0, 0, 0, 55, 185, 1, 0, 0, 0, 57, 187, 1, 0, 0, 0, 59, 191, 1, 0, 0,
		0, 61, 193, 1, 0, 0, 0, 63, 196, 1, 0, 0, 0, 65, 199, 1, 0, 0, 0, 67, 208,
		1, 0, 0, 0, 69, 215, 1, 0, 0, 0, 71, 226, 1, 0, 0, 0, 73, 74, 5, 116, 0,
		0, 74, 75, 5, 114, 0, 0, 75, 76, 5, 117, 0, 0, 76, 77, 5, 101, 0, 0, 77,
		2, 1, 0, 0, 0, 78, 79, 5, 102, 0, 0, 79, 80, 5, 97, 0, 0, 80, 81, 5, 108,
		0, 0, 81, 82, 5, 115, 0, 0, 82, 83, 5, 101, 0, 0, 83, 4, 1, 0, 0, 0, 84,
		85, 5, 110, 0, 0, 85, 86, 5, 111, 0, 0, 86, 87, 5, 116, 0, 0, 87, 6, 1,
		0, 0, 0, 88, 89, 5, 105, 0, 0, 89, 90, 5, 115, 0, 0, 90, 8, 1, 0, 0, 0,
		91, 92, 5, 111, 0, 0, 92, 93, 5, 114, 0, 0, 93, 10, 1, 0, 0, 0, 94, 95,
		5, 97, 0, 0, 95, 96, 5, 110, 0, 0, 96, 97, 5, 100, 0, 0, 97, 12, 1, 0,
		0, 0, 98, 99, 5, 43, 0, 0, 99, 14, 1, 0, 0, 0, 100, 101, 5, 45, 0, 0, 101,
		16, 1, 0, 0, 0, 102, 103, 5, 42, 0, 0, 103, 18, 1, 0, 0, 0, 104, 105, 5,
		47, 0, 0, 105, 20, 1, 0, 0, 0, 106, 107, 5, 40, 0, 0, 107, 22, 1, 0, 0,
		0, 108, 109, 5, 41, 0, 0, 109, 24, 1, 0, 0, 0, 110, 111, 5, 105, 0, 0,
		111, 112, 5, 102, 0, 0, 112, 26, 1, 0, 0, 0, 113, 114, 5, 116, 0, 0, 114,
		115, 5, 104, 0, 0, 115, 116, 5, 101, 0, 0, 116, 117, 5, 110, 0, 0, 117,
		28, 1, 0, 0, 0, 118, 119, 5, 101, 0, 0, 119, 120, 5, 108, 0, 0, 120, 121,
		5, 115, 0, 0, 121, 122, 5, 101, 0, 0, 122, 30, 1, 0, 0, 0, 123, 124, 5,
		119, 0, 0, 124, 125, 5, 104, 0, 0, 125, 126, 5, 105, 0, 0, 126, 127, 5,
		108, 0, 0, 127, 128, 5, 101, 0, 0, 128, 32, 1, 0, 0, 0, 129, 130, 5, 115,
		0, 0, 130, 131, 5, 101, 0, 0, 131, 132, 5, 116, 0, 0, 132, 34, 1, 0, 0,
		0, 133, 134, 5, 61, 0, 0, 134, 36, 1, 0, 0, 0, 135, 136, 5, 59, 0, 0, 136,
		38, 1, 0, 0, 0, 137, 138, 5, 119, 0, 0, 138, 139, 5, 114, 0, 0, 139, 140,
		5, 105, 0, 0, 140, 141, 5, 116, 0, 0, 141, 142, 5, 101, 0, 0, 142, 40,
		1, 0, 0, 0, 143, 144, 5, 114, 0, 0, 144, 145, 5, 101, 0, 0, 145, 146, 5,
		97, 0, 0, 146, 147, 5, 100, 0, 0, 147, 42, 1, 0, 0, 0, 148, 149, 5, 118,
		0, 0, 149, 150, 5, 97, 0, 0, 150, 151, 5, 114, 0, 0, 151, 44, 1, 0, 0,
		0, 152, 153, 5, 97, 0, 0, 153, 154, 5, 115, 0, 0, 154, 155, 5, 32, 0, 0,
		155, 156, 5, 115, 0, 0, 156, 157, 5, 116, 0, 0, 157, 158, 5, 114, 0, 0,
		158, 46, 1, 0, 0, 0, 159, 160, 5, 97, 0, 0, 160, 161, 5, 115, 0, 0, 161,
		162, 5, 32, 0, 0, 162, 163, 5, 105, 0, 0, 163, 164, 5, 110, 0, 0, 164,
		165, 5, 116, 0, 0, 165, 48, 1, 0, 0, 0, 166, 167, 5, 98, 0, 0, 167, 168,
		5, 101, 0, 0, 168, 169, 5, 103, 0, 0, 169, 170, 5, 105, 0, 0, 170, 171,
		5, 110, 0, 0, 171, 50, 1, 0, 0, 0, 172, 173, 5, 101, 0, 0, 173, 174, 5,
		110, 0, 0, 174, 175, 5, 100, 0, 0, 175, 176, 5, 46, 0, 0, 176, 52, 1, 0,
		0, 0, 177, 178, 5, 112, 0, 0, 178, 179, 5, 114, 0, 0, 179, 180, 5, 111,
		0, 0, 180, 181, 5, 103, 0, 0, 181, 182, 5, 114, 0, 0, 182, 183, 5, 97,
		0, 0, 183, 184, 5, 109, 0, 0, 184, 54, 1, 0, 0, 0, 185, 186, 2, 48, 57,
		0, 186, 56, 1, 0, 0, 0, 187, 188, 7, 0, 0, 0, 188, 58, 1, 0, 0, 0, 189,
		192, 3, 61, 30, 0, 190, 192, 3, 63, 31, 0, 191, 189, 1, 0, 0, 0, 191, 190,
		1, 0, 0, 0, 192, 60, 1, 0, 0, 0, 193, 194, 5, 92, 0, 0, 194, 195, 5, 34,
		0, 0, 195, 62, 1, 0, 0, 0, 196, 197, 5, 92, 0, 0, 197, 198, 5, 92, 0, 0,
		198, 64, 1, 0, 0, 0, 199, 205, 3, 57, 28, 0, 200, 204, 3, 57, 28, 0, 201,
		204, 3, 55, 27, 0, 202, 204, 5, 95, 0, 0, 203, 200, 1, 0, 0, 0, 203, 201,
		1, 0, 0, 0, 203, 202, 1, 0, 0, 0, 204, 207, 1, 0, 0, 0, 205, 203, 1, 0,
		0, 0, 205, 206, 1, 0, 0, 0, 206, 66, 1, 0, 0, 0, 207, 205, 1, 0, 0, 0,
		208, 212, 3, 55, 27, 0, 209, 211, 3, 55, 27, 0, 210, 209, 1, 0, 0, 0, 211,
		214, 1, 0, 0, 0, 212, 210, 1, 0, 0, 0, 212, 213, 1, 0, 0, 0, 213, 68, 1,
		0, 0, 0, 214, 212, 1, 0, 0, 0, 215, 220, 5, 34, 0, 0, 216, 219, 3, 59,
		29, 0, 217, 219, 8, 1, 0, 0, 218, 216, 1, 0, 0, 0, 218, 217, 1, 0, 0, 0,
		219, 222, 1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 220, 218, 1, 0, 0, 0, 221,
		223, 1, 0, 0, 0, 222, 220, 1, 0, 0, 0, 223, 224, 5, 34, 0, 0, 224, 70,
		1, 0, 0, 0, 225, 227, 7, 2, 0, 0, 226, 225, 1, 0, 0, 0, 227, 228, 1, 0,
		0, 0, 228, 226, 1, 0, 0, 0, 228, 229, 1, 0, 0, 0, 229, 230, 1, 0, 0, 0,
		230, 231, 6, 35, 0, 0, 231, 72, 1, 0, 0, 0, 8, 0, 191, 203, 205, 212, 218,
		220, 228, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// MiniImpLexerInit initializes any static state used to implement MiniImpLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewMiniImpLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func MiniImpLexerInit() {
	staticData := &MiniImpLexerLexerStaticData
	staticData.once.Do(miniimplexerLexerInit)
}

// NewMiniImpLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewMiniImpLexer(input antlr.CharStream) *MiniImpLexer {
	MiniImpLexerInit()
	l := new(MiniImpLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &MiniImpLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "MiniImp.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// MiniImpLexer tokens.
const (
	MiniImpLexerT__0       = 1
	MiniImpLexerT__1       = 2
	MiniImpLexerT__2       = 3
	MiniImpLexerT__3       = 4
	MiniImpLexerT__4       = 5
	MiniImpLexerT__5       = 6
	MiniImpLexerT__6       = 7
	MiniImpLexerT__7       = 8
	MiniImpLexerT__8       = 9
	MiniImpLexerT__9       = 10
	MiniImpLexerT__10      = 11
	MiniImpLexerT__11      = 12
	MiniImpLexerT__12      = 13
	MiniImpLexerT__13      = 14
	MiniImpLexerT__14      = 15
	MiniImpLexerT__15      = 16
	MiniImpLexerT__16      = 17
	MiniImpLexerT__17      = 18
	MiniImpLexerT__18      = 19
	MiniImpLexerT__19      = 20
	MiniImpLexerT__20      = 21
	MiniImpLexerT__21      = 22
	MiniImpLexerT__22      = 23
	MiniImpLexerT__23      = 24
	MiniImpLexerT__24      = 25
	MiniImpLexerT__25      = 26
	MiniImpLexerT__26      = 27
	MiniImpLexerIdentifier = 28
	MiniImpLexerNumber     = 29
	MiniImpLexerString_    = 30
	MiniImpLexerWS         = 31
)
